<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHh4AAAEAIACwDgAAFgAAACgAAAAeAAAAPAAAAAEAIAAAAAAAEA4AABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGhoazBkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAaGho5GhoayhoaGswaGhrMGhoazBoaGswaGhrMGhoazBoaGswaGhrMGhoazBoa
        GswaGhrMGhoazBoaGswaGhrMGhoazBoaGswZGRnJFxcXKxkZGRQZGRmCGRkZ7xoaGsEYGBhcAAAABAAA
        AAAAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8ZGRmYFhYWFxoaGuAZGRm7GRkZbxoaGnwZGRncGRkZuwAA
        AAEAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8YGBg0GRkZghkZGccAAAACAAAAAAAAAAAXFxcWGhoa9BgY
        GD4AAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8fHx8IGhoamhsbG14AAAAAAAAAAAAAAAAAAAAAGhoa3hkZ
        GVsAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8AAAAAAAAAAAAAAAAAAAAAAAAAACQkJAcZGRmCGRkZ7x4e
        HhkAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        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
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/GRkZeBkZGTMZGRkzGRkZMxkZGTMZGRkzGRkZMxkZ
        GTMZGRkzGBgYNRkZGckaGhr/Ghoa6xkZGTsZGRkzGRkZeRoaGv8aGhr/Ghoa/xkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/GRkZxhoaGpkaGhqZGhoamRoaGpkaGhqZGhoamRoa
        GpkaGhqZGhoamxkZGe0aGhr/Ghoa+xkZGaEaGhqZGRkZxhoaGv8aGhr/Ghoa/xkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZGRlmGhoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoa
        Gv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xoaGv8aGhr/Ghoa/xkZGWYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAZGRk9GhoarhkZGWYaGhq5GRkZcBoaGpoaGhqaGRkZcBkZGbQZGRlmGRkZqRoa
        GoUaGhqFGRkZqRkZGWYZGRm0GRkZcBoaGpoaGhqaGRkZcBkZGbQZGRlmGhoarhkZGTwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///+c4AAABOAAAADgAABg4AAA8OAAB8DgAAAE4AAADOAAAHzgAABk4AAABOAAAAzgAACc4AAAnOAA
        ABzg/wQc4AAAHOAAABzgAAAc4AAAHOAAABzgAAAc4AAAHOAAABzgAAAc4AAAHOAAABzgAAAc4AAAHP//
        //w=
</value>
  </data>
</root>